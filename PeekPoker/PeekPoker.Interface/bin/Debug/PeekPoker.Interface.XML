<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PeekPoker.Interface</name>
    </assembly>
    <members>
        <member name="T:PeekPoker.Interface.AbstractPlugin">
            <summary>
            The Abstract Plugin Type for Peek Poker
            </summary>
        </member>
        <member name="T:PeekPoker.Interface.IPlugin">
            <summary>
            The PeekPoker Interface
            </summary>
        </member>
        <member name="P:PeekPoker.Interface.IPlugin.ApplicationName">
            <summary>Application name</summary>
        </member>
        <member name="P:PeekPoker.Interface.IPlugin.Description">
            <summary>Application's Description</summary>
        </member>
        <member name="P:PeekPoker.Interface.IPlugin.Author">
            <summary>The Author of the application</summary>
        </member>
        <member name="P:PeekPoker.Interface.IPlugin.Version">
            <summary>The version of the application</summary>
        </member>
        <member name="P:PeekPoker.Interface.IPlugin.Icon">
            <summary>The application's Icon</summary>
        </member>
        <member name="M:PeekPoker.Interface.AbstractPlugin.#ctor">
            <summary>
            The Abstract Plugin Constructor
            </summary>
        </member>
        <member name="M:PeekPoker.Interface.AbstractPlugin.Display(System.Windows.Forms.Form)">
            <summary>
            Display Method - Should be overridden
            </summary>
            <param name="parent">The Peek Poker Application</param>
        </member>
        <member name="P:PeekPoker.Interface.AbstractPlugin.APShowMessageBox">
            <summary>
            Show MessageBox - Thread Safe
            </summary>
        </member>
        <member name="P:PeekPoker.Interface.AbstractPlugin.APUpdateProgressBar">
            <summary>
            Work with the progressbar - Thread Safe
            </summary>
        </member>
        <member name="P:PeekPoker.Interface.AbstractPlugin.APEnableControl">
            <summary>
            Enable Controls - Thread Safe
            </summary>
        </member>
        <member name="P:PeekPoker.Interface.AbstractPlugin.APGetTextBoxText">
            <summary>
            Get a text from a textbox - Thread Safe
            </summary>
        </member>
        <member name="P:PeekPoker.Interface.AbstractPlugin.APSetTextBoxText">
            <summary>
            Set a text into a textbox - Thread Safe
            </summary>
        </member>
        <member name="P:PeekPoker.Interface.AbstractPlugin.APRtm">
             <summary>
             The real time memory property
            
             </summary>
        </member>
        <member name="P:PeekPoker.Interface.AbstractPlugin.IsMdiChild">
            <summary>
            Set or Get if the plugin loads as a MDI
            </summary>
        </member>
        <member name="P:PeekPoker.Interface.AbstractPlugin.PluginType">
            <summary>
            The Plugin type
            </summary>
        </member>
        <member name="P:PeekPoker.Interface.AbstractPlugin.ApplicationName">
            <summary>
            The Application Name
            </summary>
        </member>
        <member name="P:PeekPoker.Interface.AbstractPlugin.Description">
            <summary>
            The application Description
            </summary>
        </member>
        <member name="P:PeekPoker.Interface.AbstractPlugin.Author">
            <summary>
            The Application Author
            </summary>
        </member>
        <member name="P:PeekPoker.Interface.AbstractPlugin.Version">
            <summary>
            The Application Version
            </summary>
        </member>
        <member name="P:PeekPoker.Interface.AbstractPlugin.Icon">
            <summary>
            The Application Icon
            </summary>
        </member>
        <member name="T:PeekPoker.Interface.UpdateProgressBarHandler">
            <summary>
            Update the Main Application's progress bar
            </summary>
            <param name="min">The minimum value</param>
            <param name="max">The maximum value</param>
            <param name="value">The current value</param>
            <param name="text">The text that should be  displayed in the status bar</param>
        </member>
        <member name="T:PeekPoker.Interface.ShowMessageBoxHandler">
            <summary>
            Display's a message
            </summary>
            <param name="text">The text</param>
            <param name="caption">The header</param>
            <param name="buttons">The buttons</param>
            <param name="icon">The Icon</param>
        </member>
        <member name="T:PeekPoker.Interface.GetTextBoxTextHandler">
            <summary>
            Get a text from a control
            </summary>
            <param name="control">The control variable name</param>
            <returns>The text</returns>
        </member>
        <member name="T:PeekPoker.Interface.EnableControlHandler">
            <summary>
            Enable or Disable a control
            </summary>
            <param name="control">The control variable name</param>
            <param name="value">True to Enable and False to Disable</param>
        </member>
        <member name="T:PeekPoker.Interface.SetTextBoxTextDelegateHandler">
            <summary>
            Set a text to a control
            </summary>
            <param name="control">The control variable name</param>
            <param name="value">The text</param>
        </member>
        <member name="T:PeekPoker.Interface.Functions">
            <summary>
            Various Functions
            </summary>
        </member>
        <member name="M:PeekPoker.Interface.Functions.HexToBytes(System.String)">
            <summary>Converts a Hex string to bytes</summary>
            <param name="input">Is the String input</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ByteArrayToString(System.Byte[])">
            <summary>
            Turn bytes to hex string array
            </summary>
            <param name="bytes">The byte</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToHexString(System.Int64)">
            <summary>Convert Long to String Hex</summary>
            <param name="value">The byte array</param>
            <returns>Returns an hex string value</returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToHexString(System.Single)">
            <summary>Convert float to String Hex</summary>
            <param name="value">The float value</param>
            <returns>Returns an hex string value</returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToHexString4Bytes(System.Decimal)">
            <summary>Convert a decimal value to 4 bytes hex string</summary>
            <param name="value">The value to convert</param>
            <returns>The hex string</returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToHexString(System.Decimal)">
            <summary>Convert a decimal value to hex string</summary>
            <param name="value">The value to convert</param>
            <returns>The hex string</returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToHexString(System.String,System.Int32,System.Int32)">
            <summary>Edit a String Hex</summary>
            <param name="hexString">The valid String you want to edit</param>
            <param name="firstCharPos">The first Character we want to keep Position -starting from 0</param>
            <param name="finalCharPos">The Final Character we want to keep</param>
            <returns>Returns an hex string value</returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.IsHex(System.String)">
            <summary>Verifies if the given string is hex</summary>
            <param name="value">The string value to check</param>
            <returns>True if its hex and false if it isn't.</returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToHexString(System.Byte[])">
            <summary>Convert Byte Array to String Hex</summary>
            <param name="value">The byte array</param>
            <returns>Returns an hex string value</returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.StringToByteArray(System.String)">
            <summary>
            Turn hex string to byte array
            </summary>
            <param name="text">The hex string</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.Convert(System.String)">
            <summary>
            Convert string to unsigned value
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.UInt32ToBytes(System.UInt32)">
            <summary>Converts Unsigned Integer 32 to 4 Byte array</summary>
            <param name="value">The value to be converted</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ByteToSByte(System.Byte)">
            <summary>
                Converts a unsigned byte to a signed one
            </summary>
            <param name="b"> byte </param>
            <returns>sbyte</returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.BytesToInt16(System.Byte[],System.Boolean)">
            <summary>
                Converts a Byte array to Int16
            </summary>
            <param name="bytes"> bytes array</param>
            <param name="isBigEndian"> if bigendian = true else false; default = false</param>
            <returns> returns Int16 </returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.Int16ToBytes(System.Int16,System.Boolean)">
            <summary>
                Converts Int16 to a bytes array
            </summary>
            <param name="value"> Int16</param>
            <param name="isBigEndian">if bigendian = true else false; default = false</param>
            <returns> returns a bytes arraay</returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.BytesToUInt16(System.Byte[],System.Boolean)">
            <summary>
                Converts a Byte array to UInt16
            </summary>
            <param name="bytes"> bytes array</param>
            <param name="isBigEndian"> if bigendian = true else false; default = false</param>
            <returns> returns UInt16 </returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.UInt16ToBytes(System.UInt16,System.Boolean)">
            <summary>
                Converts UInt16 to a bytes array
            </summary>
            <param name="value"> UInt16</param>
            <param name="isBigEndian">if bigendian = true else false; default = false</param>
            <returns> returns a bytes arraay</returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.BytesToInt32(System.Byte[],System.Boolean)">
            <summary>
                Converts a Byte array to Int32
            </summary>
            <param name="bytes"> bytes array</param>
            <param name="isBigEndian"> if bigendian = true else false; default = false</param>
            <returns> returns Int32 </returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.Int32ToBytes(System.Int32,System.Boolean)">
            <summary>
                Converts Int32 to a bytes array
            </summary>
            <param name="value"> Int32</param>
            <param name="isBigEndian">if bigendian = true else false; default = false</param>
            <returns> returns a bytes arraay</returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.BytesToUInt32(System.Byte[],System.Boolean)">
            <summary>
                Converts a Byte array to UInt32
            </summary>
            <param name="bytes"> bytes array</param>
            <param name="isBigEndian"> if bigendian = true else false; default = false</param>
            <returns> returns UInt32 </returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.UInt32ToBytes(System.UInt32,System.Boolean)">
            <summary>
                Converts UInt32 to a bytes array
            </summary>
            <param name="value"> UInt32</param>
            <param name="isBigEndian">if bigendian = true else false; default = false</param>
            <returns> returns a bytes arraay</returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.BytesToInt64(System.Byte[],System.Boolean)">
            <summary>
                Converts a Byte array to Int64
            </summary>
            <param name="bytes"> bytes array</param>
            <param name="isBigEndian"> if bigendian = true else false; default = false</param>
            <returns> returns Int64 </returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.Int64ToBytes(System.Int64,System.Boolean)">
            <summary>
                Converts Int64 to a bytes array
            </summary>
            <param name="value"> Int64</param>
            <param name="isBigEndian">if bigendian = true else false; default = false</param>
            <returns> returns a bytes arraay</returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.BytesToUInt64(System.Byte[],System.Boolean)">
            <summary>
                Converts a Byte array to UInt64
            </summary>
            <param name="bytes"> bytes array</param>
            <param name="isBigEndian"> if bigendian = true else false; default = false</param>
            <returns> returns UInt64 </returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.UInt64ToBytes(System.UInt64,System.Boolean)">
            <summary>
                Converts UInt64 to a bytes array
            </summary>
            <param name="value"> UInt64</param>
            <param name="isBigEndian">if bigendian = true else false; default = false</param>
            <returns> returns a bytes arraay</returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.FloatToByteArray(System.Single,System.Boolean)">
            <summary>
            Convert floating point to byte array
            </summary>
            <param name="f"></param>
            <param name="isBigEndian"></param>
            <returns></returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.BytesToSingle(System.Byte[],System.Boolean)">
            <summary>
            Convert byte array to floating point aka single
            </summary>
            <param name="bytes"></param>
            <param name="isBigEndian"></param>
            <returns></returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.DoubleToByteArray(System.Double,System.Boolean)">
            <summary>
            Convert floating point double to byte array
            </summary>
            <param name="d">The double</param>
            <param name="isBigEndian">Endian type</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.BytesToDouble(System.Byte[],System.Boolean)">
            <summary>
            Convert byte array to double
            </summary>
            <param name="bytes">The byte array</param>
            <param name="isBigEndian">The endian type</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToUInt16(System.Byte[])">
            <summary>Converts 2 Bytes Array to Unsigned Integer 16</summary>
            <param name="buffer">byte Array</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToInt16(System.Byte[])">
            <summary>Converts 2 Bytes Array to Integer 16</summary>
            <param name="buffer">byte Array</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToInt24(System.Byte[])">
            <summary>Converts 3 Bytes Array to Integer 24</summary>
            <param name="buffer">byte Array</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToUInt24(System.Byte[])">
            <summary>Converts 3 Bytes Array to Unsigned Unsigned Integer 24</summary>
            <param name="buffer">byte Array</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToInt32(System.Byte[])">
            <summary>Converts 4 Bytes Array to Integer 32</summary>
            <param name="buffer">byte Array</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToUInt32(System.Byte[])">
            <summary>Converts 4 Bytes Array to Unsigned Integer 32</summary>
            <param name="buffer">byte Array</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToInt40(System.Byte[])">
            <summary>Converts 5 Bytes Array to Integer 64</summary>
            <param name="buffer">byte Array</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToUInt40(System.Byte[])">
            <summary>Converts 5 Bytes Array to Unsigned Integer 64</summary>
            <param name="buffer">byte Array</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToInt48(System.Byte[])">
            <summary>Converts 6 Bytes Array to Integer 64</summary>
            <param name="buffer">byte Array</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToUInt48(System.Byte[])">
            <summary>Converts 6 Bytes Array to Unsigned Integer 64</summary>
            <param name="buffer">byte Array</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToInt56(System.Byte[])">
            <summary>Converts 7 Bytes Array to Integer 64</summary>
            <param name="buffer">byte Array</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToUInt56(System.Byte[])">
            <summary>Converts 7 Bytes Array to Unsigned Integer 64</summary>
            <param name="buffer">byte Array</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToInt64(System.Byte[])">
            <summary>Converts 8 Bytes Array to Integer 64</summary>
            <param name="buffer">byte Array</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToUInt64(System.Byte[])">
            <summary>Converts 8 Bytes Array to Unsigned Integer 64</summary>
            <param name="buffer">byte Array</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToSingle(System.Byte[])">
            <summary>Converts Byte Array to Single/Float</summary>
            <param name="buffer">The Byte Array</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToDouble(System.Byte[])">
            <summary>Converts Byte Array to Double</summary>
            <param name="buffer">The Byte Array</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToInt(System.String)">
            <summary>Convert hex string to Int</summary>
            <param name="value">The string(hex) value</param>
            <returns>A long value of the given hex</returns>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToLong(System.String)">
            <summary>Convert hex string to Long</summary>
            <param name="value">The string(hex) value</param>
            <returns>A long value of the given hex</returns>
        </member>
        <member name="T:PeekPoker.Interface.Functions.ToByteArray">
            <summary>Contains function/s to converts values or objects to byte array</summary>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToByteArray.Int16(System.Int16)">
            <summary>Converts Integer 16 to 2 Byte array</summary>
            <param name="value">The value to be converted</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToByteArray.UInt16(System.UInt16)">
            <summary>Converts Unsigned Integer 16 to 2 Byte array</summary>
            <param name="value">The value to be converted</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToByteArray.Int24(System.Int32)">
            <summary>Converts Integer 24 to 3 Byte array</summary>
            <param name="value">The value to be converted</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToByteArray.UInt24(System.UInt32)">
            <summary>Converts Unsigned Integer 24 to 3 Byte array</summary>
            <param name="value">The value to be converted</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToByteArray.Int32(System.Int32)">
            <summary>Converts Integer 32 to 4 Byte array</summary>
            <param name="value">The value to be converted</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToByteArray.UInt32(System.UInt32)">
            <summary>Converts Unsigned Integer 32 to 4 Byte array</summary>
            <param name="value">The value to be converted</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToByteArray.Int40(System.Int64)">
            <summary>Converts Integer 40 to 5 Byte array</summary>
            <param name="value">The value to be converted</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToByteArray.UInt40(System.UInt64)">
            <summary>Converts Unsigned Integer 40 to 5 Byte array</summary>
            <param name="value">The value to be converted</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToByteArray.Int48(System.Int64)">
            <summary>Converts Integer 64 to 6 Byte array</summary>
            <param name="value">The value to be converted</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToByteArray.UInt48(System.UInt64)">
            <summary>Converts Unsigned Integer 64 to 6 Byte array</summary>
            <param name="value">The value to be converted</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToByteArray.Int56(System.Int64)">
            <summary>Converts Integer 64 to 7 Byte array</summary>
            <param name="value">The value to be converted</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToByteArray.UInt56(System.UInt64)">
            <summary>Converts Unsigned Integer 64 to 7 Byte array</summary>
            <param name="value">The value to be converted</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToByteArray.Int64(System.Int64)">
            <summary>Converts Integer 64 to 8 Byte array</summary>
            <param name="value">The value to be converted</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToByteArray.UInt64(System.UInt64)">
            <summary>Converts Unsigned Integer 64 to 8 Byte array</summary>
            <param name="value">The value to be converted</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToByteArray.Single(System.Single)">
            <summary>Converts Single to 4 Byte array</summary>
            <param name="value">The value to be converted</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToByteArray.Double(System.Double)">
            <summary>Converts Double to 8 Byte array</summary>
            <param name="value">The value to be converted</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToByteArray.Decimal(System.Decimal)">
            <summary>Converts Decimal to 8 Byte array</summary>
            <param name="value">The value to be converted</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToByteArray.Decimal4Bytes(System.Decimal)">
            <summary>Converts Decimal to 4 Byte array</summary>
            <param name="value">The value to be converted</param>
        </member>
        <member name="M:PeekPoker.Interface.Functions.ToByteArray.BytePiece(System.Byte[],System.UInt32,System.UInt32)">
            <summary>Get a piece of a full byte array</summary>
            <param name="piece">The Full byte you want to take a piece from</param>
            <param name="startOffset">The starting offset</param>
            <param name="size">The full size of your new byte piece</param>
        </member>
        <member name="T:PeekPoker.Interface.RealTimeMemory">
            <summary>
                Real Time Memory Access Class using xbdm
                NB: Large dump speed depends on the version of xbdm you have
                and TCP is closed after each function.
            </summary>
        </member>
        <member name="M:PeekPoker.Interface.RealTimeMemory.#ctor(System.String,System.UInt32,System.UInt32)">
            <summary>RealTimeMemory constructor Example: Default start dump = 0xC0000000 and length = 0x1FFFFFFF</summary>
            <param name="ipAddress">The IP address</param>
            <param name="startDumpOffset">The start dump address</param>
            <param name="startDumpLength">The dump length</param>
        </member>
        <member name="M:PeekPoker.Interface.RealTimeMemory.Connect">
            <summary>Connect to the  using port 730 using the given ip address</summary>
            <returns>True if connection was successful and False if not</returns>
        </member>
        <member name="M:PeekPoker.Interface.RealTimeMemory.Poke(System.String,System.String)">
            <summary>Poke the Memory</summary>
            <param name="memoryAddress">The memory address to Poke Example:0xCEADEADE - Uses *.FindOffset</param>
            <param name="value">The value to poke Example:000032FF (hex string)</param>
        </member>
        <member name="M:PeekPoker.Interface.RealTimeMemory.Poke(System.UInt32,System.String)">
            <summary>Poke the Memory</summary>
            <param name="memoryAddress">The memory address to Poke Example:0xCEADEADE - Uses *.FindOffset</param>
            <param name="value">The value to poke Example:000032FF (hex string)</param>
        </member>
        <member name="M:PeekPoker.Interface.RealTimeMemory.Peek(System.String,System.String,System.String,System.String)">
            <summary>Peek into the Memory</summary>
            <param name="startDumpAddress">The Hex offset to start dump Example:0xC0000000 </param>
            <param name="dumpLength">The Length or size of dump Example:0xFFFFFF </param>
            <param name="memoryAddress">The memory address to peek Example:0xC5352525 </param>
            <param name="peekSize">The byte size to peek Example: "0x4" or "4"</param>
            <returns>Return the hex string of the value</returns>
        </member>
        <member name="M:PeekPoker.Interface.RealTimeMemory.Peek(System.UInt32,System.UInt32,System.UInt32,System.Int32)">
            <summary>Peek into the Memory</summary>
            <param name="startDumpAddress">The Hex offset to start dump Example:0xC0000000 </param>
            <param name="dumpLength">The Length or size of dump Example:0xFFFFFF </param>
            <param name="memoryAddress">The memory address to peek Example:0xC5352525 </param>
            <param name="peekSize">The byte size to peek Example: "0x4" or "4"</param>
            <returns>Return the hex string of the value</returns>
        </member>
        <member name="M:PeekPoker.Interface.RealTimeMemory.FindHexOffset(System.String)">
            <summary>
            Find pointer offset
            </summary>
            <param name="pointer"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:PeekPoker.Interface.RealTimeMemory.Dump(System.String,System.String,System.String)">
            <summary>
            Dump the memory
            </summary>
            <param name="filename">The file to save to</param>
            <param name="startDumpAddress">The start dump address</param>
            <param name="dumpLength">The dump length</param>
        </member>
        <member name="M:PeekPoker.Interface.RealTimeMemory.Dump(System.String,System.UInt32,System.UInt32)">
            <summary>
            Dump the memory
            </summary>
            <param name="filename">The file to save to</param>
            <param name="startDumpAddress">The start dump address</param>
            <param name="dumpLength">The dump length</param>
        </member>
        <member name="M:PeekPoker.Interface.RealTimeMemory.StopCommand">
            <summary>Send a freeze command to the xbox</summary>
        </member>
        <member name="M:PeekPoker.Interface.RealTimeMemory.StartCommand">
            <summary>Send a start command to the xbox</summary>
        </member>
        <member name="E:PeekPoker.Interface.RealTimeMemory.ReportProgress">
            <summary>
            Send the progress bar update to the main
            </summary>
        </member>
        <member name="P:PeekPoker.Interface.RealTimeMemory.DumpOffset">
            <summary>Set or Get the start dump offset</summary>
        </member>
        <member name="P:PeekPoker.Interface.RealTimeMemory.DumpLength">
            <summary>Set or Get the dump length</summary>
        </member>
        <member name="P:PeekPoker.Interface.RealTimeMemory.StopSearch">
            <summary>
            Stop any searching
            </summary>
        </member>
        <member name="T:PeekPoker.Interface.RwStream">
            <summary>Contains function/s that deals with I/O reading and writing of Data</summary>
        </member>
        <member name="M:PeekPoker.Interface.RwStream.#ctor">
            <summary>Makes a temporary file Stream</summary>
        </member>
        <member name="M:PeekPoker.Interface.RwStream.#ctor(System.String)">
            <summary>
            RW Stream Constructor
            </summary>
            <param name="filename">The file name</param>
        </member>
        <member name="M:PeekPoker.Interface.RwStream.Close(System.Boolean)">
            <summary>Clears buffer by Flushing and Closes theI/O Stream</summary>
            <param name="delete">Delete file </param>
        </member>
        <member name="M:PeekPoker.Interface.RwStream.Dispose">
            <summary>Release all resources used by reader and writer stream</summary>
        </member>
        <member name="M:PeekPoker.Interface.RwStream.Flush">
            <summary>Clears buffer for this stream and any unbuffered data will be written</summary>
        </member>
        <member name="M:PeekPoker.Interface.RwStream.ReadBytes(System.Int32)">
            <summary>Reads a set size of bytes</summary>
            <param name="length">The byte array length</param>
            <returns>Byte Array</returns>
        </member>
        <member name="M:PeekPoker.Interface.RwStream.SearchHexString(System.Byte[],System.UInt32)">
            <summary>
            Search Hex String
            </summary>
            <param name="pattern">The pattern you are searching for</param>
            <param name="startDumpOffset">The Offset you want to start dump from</param>
            <returns></returns>
        </member>
        <member name="M:PeekPoker.Interface.RwStream.WriteBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>Writes a region of a byte array to the current stream</summary>
            <param name="buffer">A byte array containing the data to write</param>
            <param name="index">The starting point to start writing</param>
            <param name="count">The amount of bytes to write</param>
        </member>
        <member name="E:PeekPoker.Interface.RwStream.ReportProgress">
            <summary>
            The Progress
            </summary>
        </member>
        <member name="P:PeekPoker.Interface.RwStream.Length">
            <summary>Get/Set if current initialization length</summary>
        </member>
        <member name="P:PeekPoker.Interface.RwStream.Position">
            <summary>Get/Set if current initialization position</summary>
        </member>
        <member name="P:PeekPoker.Interface.RwStream.Accessed">
            <summary>
            If the object is accessed
            </summary>
        </member>
        <member name="P:PeekPoker.Interface.RwStream.StopSearch">
            <summary>
            Stop the search
            </summary>
        </member>
        <member name="T:PeekPoker.Interface.SearchResults">
            <summary>
            The Search Result
            </summary>
        </member>
        <member name="P:PeekPoker.Interface.SearchResults.ID">
            <summary>
            The ID
            </summary>
        </member>
        <member name="P:PeekPoker.Interface.SearchResults.Offset">
            <summary>
            The Offset
            </summary>
        </member>
        <member name="P:PeekPoker.Interface.SearchResults.Value">
            <summary>
            The value
            </summary>
        </member>
        <member name="T:PeekPoker.Interface.PluginType">
            <summary>
            The type of plugin being added to the application
            </summary>
        </member>
        <member name="F:PeekPoker.Interface.PluginType.Game">
            <summary>
            A game editor or a realtime editor
            </summary>
        </member>
        <member name="F:PeekPoker.Interface.PluginType.SelectionOption">
            <summary>
            A form program located on the selection option
            </summary>
        </member>
    </members>
</doc>
